from pydantic import BaseModel, EmailStr, Field, ConfigDict
from uuid import UUID

class ${ContextCap}In(BaseModel):
    name: str = Field(..., min_length=1, max_length=200)
    email: EmailStr
    
    model_config = ConfigDict(
        json_schema_extra={
            "examples": [{
                "name": "JoÃ£o Silva",
                "email": "joao@example.com"
            }]
        }
    )

class ${ContextCap}Update(BaseModel):
    email: EmailStr

class ${ContextCap}Out(BaseModel):
    id: UUID
    name: str
    email: str
    is_active: bool
    
    model_config = ConfigDict(from_attributes=True)
    
    @classmethod
    def from_entity(cls, entity) -> "${ContextCap}Out":
        return cls(
            id=entity.id,
            name=entity.name,
            email=entity.email,
            is_active=entity.is_active
        )
