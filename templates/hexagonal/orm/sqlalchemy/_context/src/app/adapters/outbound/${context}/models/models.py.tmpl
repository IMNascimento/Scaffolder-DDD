from __future__ import annotations
from uuid import uuid4
from sqlalchemy import String, Boolean
from sqlalchemy.orm import Mapped, mapped_column

# Base vem do combo do DB (postgres/mysql) e expÃµe o Declarative Base
from ${module_name}.${shared_pkg}.shared.db import Base  # DeclarativeBase

class ${ContextCap}Model(Base):
    __tablename__ = "${table_name}"  # ex.: "payments" (ver nota de pluralizaÃ§Ã£o)

    id: Mapped[str] = mapped_column(
        String(36),
        primary_key=True,
        default=lambda: str(uuid4()),
    )
    name: Mapped[str] = mapped_column(String(200), nullable=False)
    email: Mapped[str] = mapped_column(String(255), unique=True, index=True, nullable=False)
    is_active: Mapped[bool] = mapped_column(Boolean, default=True, nullable=False)

    def __repr__(self) -> str:
        return f"<${ContextCap}Model id={self.id} email={self.email}>"

